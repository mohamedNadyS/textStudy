name: Cross-Platform Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0

permissions:
  contents: write

jobs:
  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Install FFmpeg and UPX
        run: |
          sudo apt update
          sudo apt install -y ffmpeg upx

      - name: Build executable (stripped, clean, compressed)
        run: |
          pyinstaller --onefile --noconfirm --strip --clean textStudy/main.py
          upx dist/main

      - name: Rename and compress
        run: |
          mv dist/main dist/textStudy-linux
          tar -czf dist/textStudy-linux.tar.gz -C dist textStudy-linux

      - name: Split if > 2 GB
        run: |
          FILE=dist/textStudy-linux.tar.gz
          SIZE=$(stat -c%s "$FILE")
          if [ "$SIZE" -gt 2147483648 ]; then
            split -b 1000M "$FILE" "${FILE}.part_"
            rm "$FILE"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: textStudy-linux
          path: dist/textStudy-linux.tar.gz*
          
  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Install FFmpeg
        run: |
          curl -L -o ffmpeg.zip https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip
          unzip ffmpeg.zip -d ffmpeg
          echo "${{ github.workspace }}\\ffmpeg\\ffmpeg-*\\bin" >> $GITHUB_PATH

      - name: Build executable
        run: pyinstaller --onefile --noconfirm textStudy/main.py

      - name: Rename and compress
        run: |
          Rename-Item -Path dist\main.exe -NewName textStudy-windows.exe
          Compress-Archive -Path dist\textStudy-windows.exe -DestinationPath dist\textStudy-windows.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: textStudy-windows
          path: dist/textStudy-windows.zip

  build-macos:
    name: Build on macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Install FFmpeg
        run: |
          brew update || true
          brew install ffmpeg || true
        shell: bash

      - name: Build executable
        run: pyinstaller --onefile --noconfirm textStudy/main.py

      - name: Rename and compress
        run: |
          mv dist/main dist/textStudy-macos
          zip dist/textStudy-macos.zip dist/textStudy-macos

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: textStudy-macos
          path: dist/textStudy-macos.zip

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows, build-macos]
    steps:
      - name: Download Linux parts
        uses: actions/download-artifact@v4
        with:
          name: textStudy-linux
          path: ./release

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: textStudy-windows
          path: ./release

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: textStudy-macos
          path: ./release

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/textStudy-linux.tar.gz*
            release/textStudy-windows.zip
            release/textStudy-macos.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

